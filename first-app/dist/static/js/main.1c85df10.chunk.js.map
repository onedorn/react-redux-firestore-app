{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducers.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignOutLinks","state","firebase","links","uid","SignedInLinks","SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","React","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","value","handleSubmit","preventDefault","signIn","email","password","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","signUp","firstName","lastName","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0QAqBeA,cAAQ,KANI,SAACC,GACxB,MAAO,CACHC,QAAS,kBAAMD,ECDZ,SAACA,EAAUE,EAAXC,IACcC,EADyBD,EAAjBC,eAGhBC,OAAOJ,UAAUK,KAAK,WAC3BN,EAAS,CAAEO,KAAM,2BDCdR,CAhBK,SAACS,GACjB,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,gBACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,QAAUP,EAAMP,SAAnB,YACJQ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,mCAA1B,IAA8DJ,EAAMQ,QAAQC,cEE7EC,MATf,WACI,OACIT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,WACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,YCsBDf,cARS,SAACoB,GAErB,MAAO,CACHd,KAAMc,EAAMC,SAASf,KACrBW,QAASG,EAAMC,SAASJ,UAIjBjB,CAvBA,SAACS,GAAU,IACdH,EAAkBG,EAAlBH,KAAMW,EAAYR,EAAZQ,QAERK,EAAQhB,EAAKiB,IAAMb,EAAAC,EAAAC,cAACY,EAAD,CAAeP,QAASA,IAAaP,EAAAC,EAAAC,cAACa,EAAD,MAC9D,OAEIf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,cAAvB,aACCS,uBCiBFI,EA7BO,SAACjB,GAAU,IACtBkB,EAAkBlB,EAAlBkB,cACP,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,iBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACRc,GAAiBA,EAAcC,IAAI,SAAAC,GACjC,OACInB,EAAAC,EAAAC,cAAA,MAAIkB,IAAKD,EAAKE,IACVrB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAagB,EAAKG,MAGlCtB,EAAAC,EAAAC,cAAA,gBAAQiB,EAAKI,QAAb,KACAvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACVqB,IAAOL,EAAKM,KAAKC,UAAUC,mBCJrDC,EAZQ,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QACrB,OACI9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc2B,EAAQC,OACtC/B,EAAAC,EAAAC,cAAA,sBAAc4B,EAAQE,gBAAtB,IAAwCF,EAAQG,eAAhD,KACAjC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,IAA2BqB,IAAOM,EAAQI,UAAUR,UAAUS,WAA9D,QCSDC,EAdK,SAAAP,GAAgB,IAAdQ,EAAcR,EAAdQ,SAClB,OACIrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACVkC,GAAYA,EAASnB,IAAI,SAAAY,GACtB,OACI9B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,YAAcyB,EAAQT,GAAID,IAAKU,EAAQT,IAChDrB,EAAAC,EAAAC,cAACoC,EAAD,CAAgBR,QAASA,yBCAxCS,mLACO,IAAAC,EAEqCC,KAAK1C,MAAvCsC,EAFHG,EAEGH,SAAUzC,EAFb4C,EAEa5C,KAAMqB,EAFnBuB,EAEmBvB,cACxB,OAAIrB,EAAKiB,IAGLb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACwC,EAAD,CAAaL,SAAUA,KAE3BrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAACyC,EAAD,CAAe1B,cAAeA,OAT1BjB,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAUvC,GAAG,mBAJjBwC,IAAMC,WA8BfC,cACXzD,YAVoB,SAACoB,GAErB,OADAsC,QAAQC,IAAIvC,GACL,CACH2B,SAAU3B,EAAMwC,UAAUC,QAAQd,SAClCzC,KAAMc,EAAMC,SAASf,KACrBqB,cAAeP,EAAMwC,UAAUC,QAAQlC,iBAM3CmC,2BAAiB,CACb,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SACjD,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJpDP,CAMbR,GCAaQ,cACXzD,YAXoB,SAACoB,EAAO8C,GAC5B,IAAMnC,EAAKmC,EAASC,MAAMC,OAAOrC,GAC3BgB,EAAW3B,EAAMwC,UAAUS,KAAKtB,SAEtC,MAAO,CACHP,QAFYO,EAAWA,EAAShB,GAAM,KAGtCzB,KAAMc,EAAMC,SAASf,QAMzBwD,2BAAiB,CACb,CAAEC,WAAY,cAHPN,CArCQ,SAAChD,GAAU,IACtB+B,EAAkB/B,EAAlB+B,QACR,OAD0B/B,EAATH,KACRiB,IACLiB,EAEI9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc2B,EAAQC,OACtC/B,EAAAC,EAAAC,cAAA,SAAI4B,EAAQP,UAEhBvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACXH,EAAAC,EAAAC,cAAA,wBAAgB4B,EAAQE,gBAAxB,IAA0CF,EAAQG,gBAClDjC,EAAAC,EAAAC,cAAA,WAAMsB,IAAOM,EAAQI,UAAUR,UAAUS,eAOrDnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,gCAnBQF,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAUvC,GAAG,sBCL/BuD,cACF,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAArB,KAAAmB,IACVC,EAAAC,OAAAE,EAAA,EAAAF,CAAArB,KAAAqB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAzB,QAMJ0B,aAAe,SAACC,GACZP,EAAKQ,SAALP,OAAAQ,EAAA,EAAAR,CAAA,GACKM,EAAEG,OAAOlD,GAAK+C,EAAEG,OAAOC,SATlBX,EAYdY,aAAe,SAACL,GACZA,EAAEM,iBACFb,EAAK9D,MAAM4E,OAAOd,EAAKnD,QAZnBmD,EAAKnD,MAAQ,CACTkE,MAAO,GACPC,SAAU,IAJRhB,wEAgBL,IAAArB,EACuBC,KAAK1C,MAAzB+E,EADHtC,EACGsC,UACR,OAFKtC,EACc5C,KACXiB,IAAYb,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAUvC,GAAG,MAE7BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM6E,SAAUtC,KAAKgC,aAActE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO8E,QAAQ,SAAf,SACAhF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQuB,GAAG,QAAQ4D,SAAUxC,KAAK0B,gBAElDnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO8E,QAAQ,YAAf,YACAhF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWuB,GAAG,WAAW4D,SAAUxC,KAAK0B,gBAExDnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACT2E,EAAY9E,EAAAC,EAAAC,cAAA,SAAI4E,GAAiB,gBAnC1ChC,aAyDNxD,cAbS,SAACoB,GACrB,MAAO,CACHoE,UAAWpE,EAAMd,KAAKkF,UACtBlF,KAAMc,EAAMC,SAASf,OAIF,SAACL,GACxB,MAAO,CACHoF,OAAQ,SAACO,GAAD,OAAW3F,GR3DJ4F,EQ2DoBD,ER1DhC,SAAC3F,EAAUE,EAAXoC,IACclC,EAD2BkC,EAAlBlC,eAGjBC,OAAOwF,2BACZD,EAAYP,MACZO,EAAYN,UACdhF,KAAK,WACHN,EAAS,CAAEO,KAAM,oBAClBuF,MAAM,SAACC,GACN/F,EAAS,CAAEO,KAAM,cAAewF,aAVtB,IAACH,KQ+DR7F,CAA6CsE,GCxDtD2B,cACF,SAAAA,IAAc,IAAA1B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAArB,KAAA8C,IACV1B,EAAAC,OAAAE,EAAA,EAAAF,CAAArB,KAAAqB,OAAAG,EAAA,EAAAH,CAAAyB,GAAArB,KAAAzB,QAQJ0B,aAAe,SAACC,GACZP,EAAKQ,SAALP,OAAAQ,EAAA,EAAAR,CAAA,GACKM,EAAEG,OAAOlD,GAAK+C,EAAEG,OAAOC,SAXlBX,EAcdY,aAAe,SAACL,GACZA,EAAEM,iBACFb,EAAK9D,MAAMyF,OAAO3B,EAAKnD,QAdnBmD,EAAKnD,MAAQ,CACTkE,MAAO,GACPC,SAAU,GACVY,UAAW,GACXC,SAAU,IANR7B,wEAkBL,IAAArB,EACuBC,KAAK1C,MAAzBH,EADH4C,EACG5C,KAAMkF,EADTtC,EACSsC,UACd,OAAGlF,EAAKiB,IAAYb,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAUvC,GAAG,MAG7BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM6E,SAAUtC,KAAKgC,aAActE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO8E,QAAQ,SAAf,SACAhF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQuB,GAAG,QAAQ4D,SAAUxC,KAAK0B,gBAElDnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO8E,QAAQ,YAAf,YACAhF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWuB,GAAG,WAAW4D,SAAUxC,KAAK0B,gBAExDnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO8E,QAAQ,aAAf,cACAhF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOuB,GAAG,YAAY4D,SAAUxC,KAAK0B,gBAErDnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO8E,QAAQ,YAAf,aACAhF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOuB,GAAG,WAAW4D,SAAUxC,KAAK0B,gBAEpDnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACT2E,EAAY9E,EAAAC,EAAAC,cAAA,SAAK4E,GAAkB,gBA9C5ChC,aAoENxD,cAbS,SAACoB,GACrB,MAAO,CACHd,KAAMc,EAAMC,SAASf,KACrBkF,UAAWpE,EAAMd,KAAKkF,YAIH,SAACvF,GACxB,MAAO,CACHiG,OAAQ,SAACG,GAAD,OAAapG,ET9CP,SAACoG,GACnB,OAAO,SAACpG,EAAUE,EAAXmG,GAAqD,IAA/BjG,EAA+BiG,EAA/BjG,YAAakG,EAAkBD,EAAlBC,aAChClF,EAAWhB,IACXuD,EAAY2C,IAElBlF,EAASf,OAAOkG,+BACZH,EAAQf,MACRe,EAAQd,UACVhF,KAAK,SAACkG,GACJ,OAAO7C,EAAUG,WAAW,SAAS2C,IAAID,EAAKzE,KAAKT,KAAKoF,IAAI,CACxDR,UAAWE,EAAQF,UACnBC,SAAUC,EAAQD,SAClBlF,SAAUmF,EAAQF,UAAU,GAAKE,EAAQD,SAAS,OAEvD7F,KAAK,WACJN,EAAS,CAAEO,KAAM,qBAClBuF,MAAM,SAAAC,GACL/F,EAAS,CAAEO,KAAM,eAAgBwF,WS6BPE,CAAOG,OAI9BrG,CAA6CiG,WCtEtDW,cACF,SAAAA,IAAc,IAAArC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAArB,KAAAyD,IACVrC,EAAAC,OAAAE,EAAA,EAAAF,CAAArB,KAAAqB,OAAAG,EAAA,EAAAH,CAAAoC,GAAAhC,KAAAzB,QAMJ0B,aAAe,SAACC,GACZP,EAAKQ,SAALP,OAAAQ,EAAA,EAAAR,CAAA,GACKM,EAAEG,OAAOlD,GAAK+C,EAAEG,OAAOC,SATlBX,EAYdY,aAAe,SAACL,GACZA,EAAEM,iBAEFb,EAAK9D,MAAMoG,cAActC,EAAKnD,OAC9BmD,EAAK9D,MAAMqG,QAAQC,KAAK,MAdpBxC,EAAKnD,MAAQ,CACTqB,MAAO,GACPR,QAAS,IAJPsC,wEAsBV,OADiBpB,KAAK1C,MAAdH,KACCiB,IAGLb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM6E,SAAUtC,KAAKgC,aAActE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,sBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO8E,QAAQ,SAAf,SACAhF,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOuB,GAAG,QAAQ4D,SAAUxC,KAAK0B,gBAEjDnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO8E,QAAQ,WAAf,mBACAhF,EAAAC,EAAAC,cAAA,YAAWmB,GAAG,UAAWlB,UAAU,uBAAuB8E,SAAUxC,KAAK0B,gBAE7EnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,aAfIH,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAUvC,GAAG,mBAvBbyC,aA0DbxD,cAZS,SAACoB,GACrB,MAAO,CACHd,KAAMc,EAAMC,SAASf,OAIF,SAACL,GACxB,MAAO,CACH4G,cAAe,SAACrE,GAAD,OAAavC,EC3DP,SAACuC,GAC1B,OAAO,SAACvC,EAAUE,EAAXoC,GAAuDA,EAAhClC,YAAgC,IAEpDuD,GAAY2C,EAFwChE,EAAnBgE,gBAGjCtF,EAAUd,IAAWkB,SAASJ,QAC9B+F,EAAW7G,IAAWkB,SAASf,KAAKiB,IAE1CqC,EAAUG,WAAW,YAAYkD,IAAjCzC,OAAA0C,EAAA,EAAA1C,CAAA,GACOhC,EADP,CAEIE,gBAAiBzB,EAAQkF,UACzBxD,eAAgB1B,EAAQmF,SACxBY,SAAUA,EACVpE,UAAW,IAAIuE,QAChB5G,KAAK,WACJN,EAAS,CAAEO,KAAM,iBAAkBgC,QAASA,MAC7CuD,MAAM,SAACC,GACN/F,EAAS,CAAEO,KAAM,uBAAwBwF,WD2CRa,CAAcrE,OAI5CxC,CAA6C4G,GElC7CQ,mLAjBX,OACE1G,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACyG,EAAD,MACA3G,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACE5C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAOgE,OAAK,EAACC,KAAK,IAAIC,UAAWvE,IACjCvC,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAOiE,KAAK,eAAeC,UAAWC,IACtC/G,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAOiE,KAAK,UAAUC,UAAWlD,IACjC5D,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAOiE,KAAK,UAAUC,UAAWvB,IACjCvF,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAOiE,KAAK,UAAUC,UAAWZ,cAX3BrD,IAAMC,WCEJkE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1D,MACvB,2DClBN,IAAM2D,EAAY,CACdtC,UAAW,MAsCAuC,EAnCK,WAA+B,IAA9B3G,EAA8B4G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAOC,EAAO3H,MACV,IAAK,cAED,OADAkD,QAAQC,IAAI,eACLa,OAAA0C,EAAA,EAAA1C,CAAA,GACApD,EADP,CAEIoE,UAAW,iBAEnB,IAAK,gBAED,OADA9B,QAAQC,IAAI,iBACLa,OAAA0C,EAAA,EAAA1C,CAAA,GACApD,EADP,CAEIoE,UAAW,OAEnB,IAAK,kBAED,OADA9B,QAAQC,IAAI,mBACLvC,EAEX,IAAK,iBAED,OADAsC,QAAQC,IAAI,kBACZa,OAAA0C,EAAA,EAAA1C,CAAA,GACOpD,EADP,CAEIoE,UAAW,OAEnB,IAAK,eAED,OADA9B,QAAQC,IAAI,gBACLa,OAAA0C,EAAA,EAAA1C,CAAA,GACApD,EADP,CAEIoE,UAAW2C,EAAOnC,IAAIoC,UAE9B,QACI,OAAOhH,ICnCb0G,EAAY,CACd/E,SAAU,CACN,CAAChB,GAAI,IAAKU,MAAO,qBAAsBR,QAAS,kBAChD,CAACF,GAAI,IAAKU,MAAO,wBAAyBR,QAAS,kBACnD,CAACF,GAAI,IAAKU,MAAO,sBAAuBR,QAAS,oBAiB1CoG,EAbQ,WAA+B,IAA9BjH,EAA8B4G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAQC,EAAO3H,MACX,IAAK,iBAED,OADAkD,QAAQC,IAAI,kBAAmBwE,EAAO3F,SAC/BpB,EACX,IAAK,uBAED,OADAsC,QAAQC,IAAI,uBAAwBwE,EAAOnC,KACpC5E,EACX,QACI,OAAOA,YCJJkH,EAPKC,YAAgB,CAChCjI,KAAMyH,EACNvF,QAAS6F,EACTzE,UAAW4E,mBACXnH,SAAUoH,4DCKZpH,IAASqH,cAVY,CACnBC,OAAQ,0CACRC,WAAY,4CACZC,YAAa,mDACbC,UAAW,4BACXC,cAAe,wCACfC,kBAAmB,eACnBC,MAAO,wCAIT5H,IAASuC,YAAYsF,SAAS,CAAEC,uBAAuB,IAExC9H,QAAf,ECJI+H,EAAQC,YAAYf,EACtB7E,YACI6F,YAAgBC,IAAMC,kBAAkB,CAAEnJ,0BAAakG,+BACvDkD,yBAAeC,GACfC,6BAAmBD,EAAU,CAACE,YAAa,QAASC,wBAAwB,EAAMC,mBAAmB,MAI7GV,EAAMW,oBAAoBxJ,KAAK,WAE3ByJ,IAASC,OAAOvJ,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAUd,MAAOA,GAAQ1I,EAAAC,EAAAC,cAACuJ,EAAD,OAAoBC,SAASC,eAAe,WLyGnF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjK,KAAK,SAAAkK,GACjCA,EAAaC","file":"static/js/main.1c85df10.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignInLinks = (props) => { \r\n    return(\r\n        <ul className='right'>\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick= {props.signOut} >Log Out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'> {props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS'})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password \r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction SignOutLinks() {\r\n    return(\r\n        <ul className='right'>\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    // console.log(auth)\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\r\n    return(\r\n\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className='brand-logo'>MarioPlan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from \"react\";\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications } = props;\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user}\r\n                                        \r\n                                    </span>\r\n                                    <span> {item.content} </span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }) }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName} </p>\r\n                <p className=\"grey-text\"> {moment(project.createdAt.toDate()).calendar()} </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return(\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return(\r\n                    <Link to={'/project/' + project.id} key={project.id} >\r\n                     <ProjectSummary project={project} />\r\n                    </Link>\r\n                )   \r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList\r\n","import React from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n    render() {\r\n\r\n        const { projects, auth, notifications } = this.props;\r\n        if(!auth.uid) return<Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />   \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if(!auth.uid) return<Redirect to='/signin' />\r\n    if (project) {\r\n        return(\r\n            <div className=\"container secion project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action great lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass SignIn extends Component {\r\n    constructor() {\r\n        super()\r\n            this.state = {\r\n                email: \"\",\r\n                password: \"\"\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darker-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{authError}</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\n\r\n\r\nclass SignUp extends Component {\r\n    constructor() {\r\n        super()\r\n            this.state = {\r\n                email: \"\",\r\n                password: \"\",\r\n                firstName: \"\",\r\n                lastName: \"\"\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darker-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{ authError }</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    constructor() {\r\n        super()\r\n            this.state = {\r\n                title: \"\",\r\n                content: \"\"\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state)\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        \r\n        const { auth } = this.props;\r\n        if(!auth.uid) return<Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea  id=\"content\"  className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        \r\n        firestore.collection('projects').add({\r\n            ...project, \r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project: project})\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err})\r\n        })\r\n    }\r\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state, \r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state;\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer\r\n","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default projectReducer","import authReducer from './authReducers'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer"," import firebase from 'firebase/app'\r\n import 'firebase/firestore'\r\n import 'firebase/auth'\r\n \r\n // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyAucuJTK8S1sYuqNR6ktsodgiX40-X731w\",\r\n    authDomain: \"react-redux-firestore-app.firebaseapp.com\",\r\n    databaseURL: \"https://react-redux-firestore-app.firebaseio.com\",\r\n    projectId: \"react-redux-firestore-app\",\r\n    storageBucket: \"react-redux-firestore-app.appspot.com\",\r\n    messagingSenderId: \"792913611364\",\r\n    appId: \"1:792913611364:web:6dc30ad1a458dd90\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\n  export default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport {Provider} from 'react-redux';\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\r\nimport fbConfig from './config/fbConfig'\r\n\r\n\r\nconst store = createStore(rootReducer, \r\n    compose(\r\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore})),\r\n        reduxFirestore(fbConfig),\r\n        reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true})\r\n        )\r\n    );\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n    \r\n    ReactDOM.render(<Provider store={store} ><App /></Provider>, document.getElementById('root'));\r\n})\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}